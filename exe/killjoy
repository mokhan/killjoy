#!/usr/bin/env ruby

require "bundler/setup"
$LOAD_PATH.unshift(File.expand_path("../lib", File.dirname(__FILE__)))
require "killjoy"
require "killjoy/worker"
require "killjoy/server"
require "logger"
require "serverengine"

cpus = Facter.value('processors')['count'].to_i
run_asynchronously = ENV["ASYNC"] == 'true'

#Sneakers.configure({
#log: STDOUT,
#metrics: Sneakers::Metrics::LoggingMetrics.new,
#env: ENV.fetch('ENV', 'development'),
#ack: run_asynchronously == false,
#durable: true,
#threads: cpus,
#})
#Sneakers.logger.level = Logger::WARN
#if run_asynchronously
#Sneakers::Runner.new([ Killjoy::AsyncConsumer ]).run
#else
#Sneakers::Runner.new([ Killjoy::Consumer ]).run
#end


server = ServerEngine.create(Killjoy::Server, Killjoy::Worker) do
  {
    amqp_uri: ENV.fetch("RABBITMQ_URL", "amqp://guest:guest@localhost:5672"),
    daemonize: false,
    exchange: 'killjoy',
    exchange_type: 'x-modulus-hash',
    heartbeat: 2,
    pid_path: 'tmp/killjoy.pid',
    prefetch: cpus,
    worker_type: 'process',
    workers: 4,
    queue_shards: 4,
  }
end
server.run
