#!/usr/bin/env ruby

require "bundler/setup"
$LOAD_PATH.unshift(File.expand_path("../lib", File.dirname(__FILE__)))
require "killjoy"
require "sneakers/runner"
require "sneakers/metrics/statsd_metrics"
require "sneakers/metrics/logging_metrics"
require "logger"
require "statsd-ruby"

cpus = Facter.value('processors')['count'].to_i

run_asynchronously = ENV["ASYNC"] == 'true'

Sneakers.configure({
  amqp: ENV.fetch("AMQP_URL", "amqp://guest:guest@localhost:5672"),
  exchange: 'shard.killjoy',
  exchange_type: 'x-modulus-hash',
  daemonize: false,
  log: STDOUT,
  metrics: Sneakers::Metrics::LoggingMetrics.new,
  #metrics: Sneakers::Metrics::StatsdMetrics.new(Statsd.new(ENV["STATSD_HOST"], 9125))
  #timeout_job_after: 5,
  #workers: 1,
  env: ENV.fetch('ENV', 'development'),
  ack: run_asynchronously == false,
  durable: true,
  prefetch: cpus,
  threads: cpus,
  hooks: {
    after_fork: Killjoy::AfterFork.new,
  }
})
Sneakers.logger.level = Logger::INFO
if run_asynchronously
  Sneakers::Runner.new([ Killjoy::AsyncConsumer ]).run
else
  Sneakers::Runner.new([ Killjoy::Consumer ]).run
end
